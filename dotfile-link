#!/usr/bin/python
from glob import glob
from os import chdir, environ, makedirs, symlink, walk
from os.path import dirname, exists, expanduser, islink, join, realpath
from sys import stderr


REPO = environ.get('DOTFILES_REPO', expanduser('~/.dotfiles'))
HOME = environ['HOME']
IGNORED = []
chdir(REPO)


def expand_ignored():
    ignore_globs = ['dotfile-link', '.*']
    try:
        fh = open(join(REPO, '.dfignore'))
        for expr in fh.readlines():
            expr = expr.strip()
            if expr and not expr.startswith('#'):
                ignore_globs.append(expr)
        fh.close()
    except IOError:
        pass
    for expr in ignore_globs:
        IGNORED.extend(glob(expr))


def managed():
    for dirpath, _, filenames in walk(REPO):
        local_dir = dirpath[len(REPO):].lstrip('/')
        for fn in filenames:
            full_path = join(local_dir, fn)
            if any(full_path.startswith(i) for i in IGNORED):
                continue

            if not local_dir:
                target = ("~/.%s" % full_path)
            else:
                target = ("~/%s" % full_path)

            yield join(REPO, full_path), expanduser(target)


expand_ignored()

print "Updating %s dotfiles from %s" % (HOME, REPO)
stats = dict(noop=0, new=0, error=0, newdir=0)
for source, target in managed():
    if islink(target):
        dest = realpath(target)
        if dest != source:
            print >> stderr, "* skipping: %s is a symlink to %s" \
              % (target, dest)
            stats['error'] += 1
        else:
            stats['noop'] += 1
        continue
    elif exists(target):
        print >> stderr, "* skipping: %s already exists" % (target,)
        stats['error'] += 1
        continue
    else:
        directory = dirname(target)
        if not exists(directory):
            makedirs(directory)
            stats['newdir'] += 1
        print "- linking %s -> %s" % (target, source)
        symlink(source, target)
        stats['new'] += 1

print ("%(noop)s unchanged, %(new)s new links, "
       "%(newdir)s directories created, %(error)s errors." % stats)

